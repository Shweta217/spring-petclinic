{
"AWSTemplateFormatVersion" : "2010-09-09",

"Description": "ECR for docker build push repo from jenkinsfile",

"Parameters":{

"VPC":{
"Description": "Default VPC",
"Type": "AWS::EC2::VPC::Id"
},

"Subnet":{
"Description": "Public Subnet",
"Type": "AWS::EC2::Subnet::Id"
},

"KeyPair":{
"Description": "A keypair to connect",
"Type": "AWS::EC2::KeyPair::KeyName"
}

},



"Mappings":{

"RegionMap":{

"us-east-1": 
{
"Rgn": "ami-01b701d1a348a0d00"
},

"us-west-1":
{
"Rgn": "ami-0fc5ce74467bede32"
},

"ap-south-1":
{
"Rgn": "ami-0d01ca46dc1c075ef"
},

"ap-southeast-1":
{
"Rgn": "ami-041abe3853451bde6"
},

"ap-northeast-2":
{
"Rgn":"ami-0718ed3169284fcb2"
},

"ap-northeast-1":
{
"Rgn":"ami-03e8262ffcd3dc2ef"
}

}
},




"Resources":{

"EC2Instance":{

"Type": "AWS::EC2::Instance",

"Properties":{
"ImageId":{"Fn::FindInMap":["RegionMap", {"Ref":"AWS::Region"}, "Rgn"]},

"InstanceType":"t2.micro",

"NetworkInterfaces": [{
"AssociatePublicIpAddress": "true",
"DeviceIndex": "0",
"GroupSet": [{"Ref": "SecurityGroup"}],
"SubnetId": {"Ref": "Subnet"}
}],

"Tags":[{
"Key": "Name",
"Value": "ECRCF23"
}],

"KeyName": {"Ref": "KeyPair"}
}
},

"SecurityGroup":{
"Type": "AWS::EC2::SecurityGroup",
"Properties":{
"GroupDescription": "Host",
"VpcId": {"Ref": "VPC"},
"SecurityGroupIngress": [{
"CidrIp": "0.0.0.0/0",
"FromPort": 3389,
"IpProtocol": "tcp",
"ToPort": 3389
}]
}
},

	
"ElasticLoadBalancer":{
"Type": "AWS::ElasticLoadBalancing::LoadBalancer",
"Properties":{
"CrossZone": "false",
"SecurityGroups": [{"Ref": "SecurityGroup"}],
"Listeners":[{
"LoadBalancerPort": "80",
"InstancePort": "80",
"Protocol": "http"
}],
"Instances": [{"Ref": "EC2Instance"}],
"Subnets": [{"Ref": "Subnet"}]
}
},



"ECSRepo":{
      "Type":"AWS::ECR::Repository",
      "Properties":{
        "RepositoryName": "spring-petclinic",
        "RepositoryPolicyText":{
          "Version":"2008-10-17",
          "Statement":[{
              "Sid":"AllowPushPull",
              "Effect":"Allow",
              "Principal":{
			  "AWS": [
              "arn:aws:iam::758048112949:root"
            ]
 
			  },
              "Action":[
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
                "ecr:BatchCheckLayerAvailability",
                "ecr:PutImage",
                "ecr:InitiateLayerUpload",
                "ecr:UploadLayerPart",
                "ecr:CompleteLayerUpload"
              ]}
          ]}
      }
    },






"EcsCluster":{
"Type": "AWS::ECS::Cluster"
},


"EcsTaskDefinition":{
"Type": "AWS::ECS::TaskDefinition",
"Properties":{
"ContainerDefinitions":[{
"Name": "jenkinsDockerEcsEcrAppChck",
"Cpu": "1",
"Essential": "true",
"Image":{
"Fn::Join":["",[
{"Ref": "AWS::AccountId"},".dkr.ecr.us-east-1.amazonaws.com/",
{"Ref": "ECSRepo"}
]]
},
"Memory": "100",
"PortMappings":[{
"HostPort": "80",
"ContainerPort": "80"
}]
}],
"Volumes":[{"Name": "my-Vol"}]
}},



"EcsService":{
"Type": "AWS::ECS::Service",
"Properties":{
"Cluster":{"Ref":"EcsCluster"},
"DesiredCount": "0",
"DeploymentConfiguration":{
"MaximumPercent": "100",
"MinimumHealthyPercent": "0"
},
"LoadBalancers":[{
"ContainerName": "jenkinsDockerEcsEcrAppChck",
"ContainerPort": "80",
"LoadBalancerName":{"Ref": "ElasticLoadBalancer"}
}],
"Role": {"Ref": "EcsServiceRole"},
"TaskDefinition": {"Ref": "EcsTaskDefinition"}
}},

    "EC2InstanceProfile":{
      "Type":"AWS::IAM::InstanceProfile",
      "Properties":{
        "Path":"/",
        "Roles":[{"Ref":"EC2Role"}]
      }
    },
 
"EC2Role":{
      "Type":"AWS::IAM::Role",
      "Properties":{
        "AssumeRolePolicyDocument":{
          "Statement":[{
              "Effect":"Allow",
              "Principal":{
                "Service":["ec2.amazonaws.com"]
              },
              "Action":["sts:AssumeRole"]
            }]
        },
        "Path":"/",
        "Policies":[{
            "PolicyName":"ecs-service",
            "PolicyDocument":{
              "Statement":[{
                  "Effect":"Allow",
                  "Action":[
                    "ecs:CreateCluster",
                    "ecs:RegisterContainerInstance",
                    "ecs:DeregisterContainerInstance",
                    "ecs:DiscoverPollEndpoint",
                    "ecs:Submit*",
                    "ecr:*",
                    "ecs:Poll"
                  ],
                  "Resource":"*"
                }]
            }
          }]
      }
    },



"EcsServiceRole":{
      "Type":"AWS::IAM::Role",
      "Properties":{
        "AssumeRolePolicyDocument":{
          "Statement":[{
              "Effect":"Allow",
              "Principal":{
                "Service":[
                  "ecs.amazonaws.com"
                ]
              },
              "Action":["sts:AssumeRole"]
            }]
        },
        "Path":"/",
        "Policies":[{
            "PolicyName":"ecs-service",
            "PolicyDocument":{
              "Statement":[{
                  "Effect":"Allow",
                  "Action":[
                    "elasticloadbalancing:Describe*",
                    "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                    "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                    "ec2:Describe*",
                    "ec2:AuthorizeSecurityGroupIngress"
                  ],
                  "Resource":"*"
                }]
            }
          }]
      }
    }





}
}